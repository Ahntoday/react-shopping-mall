{"version":3,"sources":["shoes-data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["shoesData","id","title","content","price","Cart","props","state","useSelector","dispatch","useDispatch","Table","responsive","reducer","map","el","i","name","quantity","onClick","type","payload","alertReducer","className","Detail","lazy","stockContext","React","createContext","ShoppingItem","stock","useContext","history","useHistory","data","shoes","push","src","alt","LoadingUI","App","useState","shoesChange","showloadingUI","showloadingUIChange","stockChange","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","axios","get","then","result","catch","console","log","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","store","createStore","combineReducers","action","copy","findIndex","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.587d0c0c.chunk.js","sourcesContent":["let shoesData = [\n    {\n        id: 0,\n        title: \"White and Black\",\n        content: \"Born in France\",\n        price: 120000\n    },\n\n    {\n        id: 1,\n        title: \"Red Knit\",\n        content: \"Born in Seoul\",\n        price: 110000\n    },\n\n    {\n        id: 2,\n        title: \"Grey Yordan\",\n        content: \"Born in the States\",\n        price: 130000\n    }\n];\n\nexport default shoesData","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport './Cart.css';\n\nconst Cart = (props) => {\n    let state = useSelector(state => state);\n    let dispatch = useDispatch();\n    return (\n        <div>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>상품명</th>\n                        <th>수량</th>\n                        <th>변경</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        state.reducer.map((el, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td>{el.id}</td>\n                                    <td>{el.name}</td>\n                                    <td>{el.quantity}</td>\n                                    <td>\n                                        <button onClick={() => { dispatch({ type: '수량증가', payload: el.id }) }}>+</button>\n                                        <button onClick={() => { dispatch({ type: '수량감소', payload: el.id }) }}>-</button>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n            {\n                state.alertReducer === true\n                    ? (\n                        <div className=\"customAlertYellow\">\n                            <p>지금 구매하시면 타임세일 20%</p>\n                            <button onClick={() => { dispatch({ type: 'closeAlert' }) }}>X</button>\n                        </div>\n                    )\n                    : null\n            }\n        </div>\n    )\n}\n\n// const convertStoreDataToProps = (state) => { // redux store 데이터 props로 변환\n//     return {\n//         state: state.reducer, // state 데이터를 state라는 이름의 props로 바꾸기\n//         alertState: state.alertReducer\n//     }\n// }\n\n// export default connect(convertStoreDataToProps)(Cart);\nexport default Cart;","/* eslint-disable */\nimport React, { useState, useContext, lazy, Suspense } from 'react'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport './App.css';\nimport shoesData from './shoes-data.js';\nimport { Link, Route, useHistory } from 'react-router-dom';\nlet Detail = lazy(() => import('./Detail.js'));\nimport Cart from './Cart.js';\nimport axios from 'axios';\n\nlet stockContext = React.createContext();\n\nfunction App() {\n  let [shoes, shoesChange] = useState(shoesData);\n  let [showloadingUI, showloadingUIChange] = useState(false);\n  let [stock, stockChange] = useState([10, 11, 12]); // 재고데이터\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">SeoAn's Shoes</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\" > Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Route exact path=\"/\">\n        <div className=\"main\">\n          <button className=\"main-detail\">행사상품보기</button>\n        </div>\n        <div className=\"container\">\n          <ShoppingItem shoes={shoes} />\n          {\n            showloadingUI === true\n              ? <LoadingUI />\n              : null\n          }\n          <button className=\"btn btn-primary\" onClick={() => {\n            showloadingUIChange(true);\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result) => {\n                showloadingUIChange(false); // 로딩중 UI 안보이게\n                shoesChange([...shoes, ...result.data]);\n              })\n              .catch(() => {\n                showloadingUIChange(false);\n                console.log('실패');\n              });\n          }}>더보기</button>\n        </div>\n      </Route>\n      <Route path=\"/detail/:id\">\n        <Suspense fallback={<div>로딩중이에요</div>}>\n          <Detail shoes={shoes} stock={stock} stockChange={stockChange} />\n        </Suspense>\n\n      </Route>\n      <Route path=\"/:id\">\n      </Route>\n      <Route path=\"/cart\">\n        <Cart />\n      </Route>\n    </div>\n  );\n}\n\nconst ShoppingItem = (props) => {\n  let stock = useContext(stockContext);\n  let history = useHistory();\n\n  let data = props.shoes.map((el, i) => {\n    return (\n      <div className=\"col-md-4\" key={i} onClick={() => { history.push('/detail/' + el.id) }}>\n        <img src={\"https://codingapple1.github.io/shop/shoes\" + (el.id + 1) + \".jpg\"} alt=\"신발상세사진\"></img>\n        <h4> {el.title}</h4>\n        <p className=\"goods-detail\">{el.content} & {el.price} </p>\n        {stock}\n      </div>\n    )\n  });\n\n  return (\n    <div className=\"row\">\n      {data}\n    </div>\n  )\n}\n\nconst LoadingUI = () => {\n  return (\n    <div className=\"loadingUI\">\n      <p>로딩중입니다</p>\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nlet alertDefaultState = true;\n\nconst alertReducer = (state = alertDefaultState, action) => {\n  if (action.type === 'closeAlert') {\n    state = false;\n    return state;\n  }\n  else {\n    return state\n  }\n}\n\nlet defaultState = [\n  { id: 0, name: 'White and Black', quantity: 10 },\n  { id: 1, name: 'Grey Yordan', quantity: 11 },\n  { id: 2, name: 'Flowey', quantity: 12 }\n];\n\nconst reducer = (state = defaultState, action) => {\n  if (action.type === '항목추가') { // 이미 장바구니에 있는 항목이면 해당 상품수량 증가\n    let copy = [...state];\n    let id = copy.findIndex(el => { return el.id === action.payload.id });\n    if (id === -1) {\n      copy.push(action.payload);\n    }\n    else {\n      copy[id].quantity++;\n    }\n    return copy\n  }\n  else if (action.type === '수량증가') { // 수량증가라는 이름의 데이터수정방법 만들기\n    let copy = [...state];\n    copy[action.payload].quantity++;\n    return copy\n  }\n  else if (action.type === '수량감소') {\n    let copy = [...state];\n    copy[action.payload].quantity--;\n    if (copy[action.payload].quantity <= 0) {\n      copy[action.payload].quantity = 0;\n    }\n    return copy\n  }\n  else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, alertReducer }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}